import { GoogleGenAI, Type, Chat } from "@google/genai";
import type { ReportData, TaxParams, CorporateTaxParams, VATTaxParams, RealEstateTaxParams, WithholdingTaxParams, SocialInsuranceParams, StampDutyParams, ZakatParams, InvestmentParams, EndOfServiceParams, FeasibilityStudyParams, ElectricityParams, InheritanceParams, CustomsParams } from '../types';

if (!process.env.API_KEY) {
  // In a real app, this would be handled more gracefully.
  // For this environment, we simulate an error if the key is missing.
  console.error("API_KEY environment variable not set.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY! });

const responseSchema = {
  type: Type.OBJECT,
  properties: {
    summary: { type: Type.STRING, description: "ملخص شامل لعملية الحساب والقوانين المطبقة لهذه السنة." },
    calculations: {
      type: Type.ARRAY,
      description: "مصفوفة من خطوات الحساب التفصيلية.",
      items: {
        type: Type.OBJECT,
        properties: {
          description: { type: Type.STRING, description: "وصف لخطوة الحساب." },
          amount: { type: Type.STRING, description: "المبلغ المرتبط بالخطوة، يمكن أن يكون رقمًا أو نصًا مثل 'معفى'." },
        },
        required: ['description', 'amount'],
      },
    },
    grossIncome: { type: Type.NUMBER, description: "القيمة الإجمالية الأساسية للحساب (الدخل الإجمالي، الإيرادات، المبيعات, الأجر الشامل)." },
    totalTax: { type: Type.NUMBER, description: "إجمالي الضريبة المستحقة (إن وجدت، وإلا صفر)." },
    totalInsurance: { type: Type.NUMBER, description: "إجمالي التأمينات المستحقة (إن وجدت، وإلا صفر)." },
    netIncome: { type: Type.NUMBER, description: "صافي الدخل أو صافي الربح أو أي قيمة صافية ناتجة عن الحساب." },
    applicableLaws: {
      type: Type.ARRAY,
      description: "قائمة بالقوانين والمواد الرئيسية التي تم تطبيقها.",
      items: { type: Type.STRING },
    },
  },
  required: ['summary', 'calculations', 'grossIncome', 'totalTax', 'totalInsurance', 'netIncome', 'applicableLaws'],
};

const callGemini = async (prompt: string): Promise<ReportData> => {
  try {
    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: prompt,
      config: {
        responseMimeType: "application/json",
        responseSchema: responseSchema,
        temperature: 0.1,
      },
    });

    const jsonText = response.text.trim();
    const data = JSON.parse(jsonText);
    return data as ReportData;
  } catch (error) {
    console.error("Error calling Gemini API:", error);
    if (error instanceof Error && error.message.includes('JSON')) {
        throw new Error("error.gemini.parsing");
    }
    throw new Error("error.gemini.generic");
  }
};

export const getTaxReport = async (params: TaxParams): Promise<ReportData> => {
  const prompt = `
    أنت خبير ضرائب مصري محترف. قم بإعداد تقرير ضريبي مفصل لموظف بناءً على البيانات التالية:
    - الدخل السنوي الإجمالي: ${params.income} جنيه مصري
    - سنة المحاسبة: ${params.year}
    - نوع الضريبة المطلوب حسابها: ${params.taxType}
    - نوع التأمينات الاجتماعية: ${params.insuranceType}

    المطلوب:
    1.  احسب بدقة قيمة التأمينات الاجتماعية السنوية المستحقة.
    2.  احسب صافي الدخل السنوي بعد خصم التأمينات.
    3.  حدد الشريحة المعفاة من الضريبة لتلك السنة.
    4.  احسب وعاء الضريبة.
    5.  طبق شرائح ضريبة الدخل المعتمدة في سنة ${params.year}.
    6.  احسب إجمالي الضريبة السنوية المستحقة.
    7.  احسب صافي الدخل النهائي بعد خصم الضرائب والتأمينات.

    قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
    - خاصية 'grossIncome' يجب أن تكون ${params.income}.
    - خاصية 'netIncome' يجب أن تكون صافي الدخل النهائي.
  `;
  return callGemini(prompt);
};

export const getCorporateTaxReport = async (params: CorporateTaxParams): Promise<ReportData> => {
    let lawSpecificPrompt = '';

    switch (params.law) {
        case 'standard_22.5':
            lawSpecificPrompt = `
                طبق النظام الضريبي العادي للشركات.
                المطلوب:
                1.  احسب صافي الربح السنوي (الإيرادات - المصروفات).
                2.  وعاء الضريبة هو صافي الربح السنوي.
                3.  طبق سعر الضريبة المعتمد وهو 22.5% على وعاء الضريبة.
                4.  احسب إجمالي الضريبة السنوية المستحقة.
                5.  احسب صافي الربح النهائي بعد خصم الضرائب.
            `;
            break;
        case 'law_175_2023':
            lawSpecificPrompt = `
                طبق قانون 175 لسنة 2023 الخاص بالمنشآت الفردية (شرائح تصاعدية).
                **تعليمات هامة جداً: لا تقم بخصم أي شريحة معفاة من صافي الربح. وعاء الضريبة هو كامل صافي الربح السنوي، ويتم تطبيق الشرائح عليه مباشرة.**
                جدول الشرائح كالتالي:
                - صافي الدخل حتى 600,000: شريحة أولى من 1 إلى 40,000 بسعر 0%، الثانية من 40,001 إلى 55,000 بسعر 10%، الثالثة من 55,001 إلى 70,000 بسعر 15%، الرابعة من 70,001 إلى 200,000 بسعر 20%، الخامسة من 200,001 إلى 400,000 بسعر 22.5%، ما زاد عن 400,000 بسعر 25%.
                - صافي الدخل من 600,001 إلى 700,000: تلغى الشريحة الأولى المعفاة، وتبدأ من 1 إلى 55,000 بسعر 10% وهكذا.
                - صافي الدخل من 700,001 إلى 800,000: تلغى الشريحتين الأولى والثانية، وتبدأ من 1 إلى 70,000 بسعر 15% وهكذا.
                - صافي الدخل من 800,001 إلى 900,000: تلغى الشرائح الثلاث الأولى، وتبدأ من 1 إلى 200,000 بسعر 20% وهكذا.
                - صافي الدخل من 900,001 إلى 1,200,000: تلغى الشرائح الأربع الأولى، وتبدأ من 1 إلى 400,000 بسعر 22.5% وهكذا.
                - صافي الدخل فوق 1,200,000: من 1 إلى 1,200,000 بسعر 25% وما زاد بسعر 27.5%.
                
                المطلوب:
                1.  احسب صافي الربح السنوي (الإيرادات - المصروفات).
                2.  حدد فئة الدخل التي يقع فيها صافي الربح لتحديد جدول الشرائح المطبق.
                3.  طبق الشرائح بدقة على كامل صافي الربح لحساب الضريبة المستحقة.
                4.  احسب صافي الربح النهائي بعد خصم الضريبة.
            `;
            break;
        case 'law_30_2023':
            lawSpecificPrompt = `
                طبق قانون 30 لسنة 2023 (ضريبة قطعية على حجم الأعمال).
                جدول الضريبة كالتالي:
                - حجم الأعمال أقل من 250,000 جنيه: ضريبة 1,000 جنيه.
                - من 250,000 إلى أقل من 500,000 جنيه: ضريبة 2,500 جنيه.
                - من 500,000 إلى أقل من 1,000,000 جنيه: ضريبة 5,000 جنيه.
                - من 1,000,000 إلى أقل من 2,000,000 جنيه: ضريبة 0.5% من حجم الأعمال.
                - من 2,000,000 إلى أقل من 3,000,000 جنيه: ضريبة 0.75% من حجم الأعمال.
                - من 3,000,000 إلى 10,000,000 جنيه: ضريبة 1% من حجم الأعمال.

                المطلوب:
                1.  حدد الشريحة التي يقع فيها حجم الأعمال (الإيرادات).
                2.  احسب الضريبة المستحقة (إما مبلغ مقطوع أو نسبة من الإيرادات).
                3.  احسب الصافي بعد خصم الضريبة من الإيرادات.
            `;
            break;
        case 'law_6_2025':
            lawSpecificPrompt = `
                طبق قانون 6 لسنة 2025 (نظام المحاسبة المبسط على حجم الأعمال).
                جدول الضريبة كالتالي:
                - حجم الأعمال من 1 إلى 500,000 جنيه: ضريبة 0.4% من حجم الأعمال.
                - من 500,001 إلى 2,000,000 جنيه: ضريبة 0.5% من حجم الأعمال.
                - من 2,000,001 إلى 3,000,000 جنيه: ضريبة 0.75% من حجم الأعمال.
                - من 3,000,001 إلى 10,000,000 جنيه: ضريبة 1% من حجم الأعمال.
                - من 10,000,001 إلى 20,000,000 جنيه: ضريبة 22.5% (هذه النسبة تطبق على صافي الربح وليس حجم الأعمال، افترض ربح حكمي 20% من حجم الأعمال ثم طبق الضريبة).

                المطلوب:
                1.  حدد الشريحة التي يقع فيها حجم الأعمال (الإيرادات).
                2.  احسب الضريبة المستحقة بدقة حسب الشريحة. للشريحة الأخيرة فوق 10 مليون، افترض ربح 20% من الإيرادات واحسب الضريبة 22.5% على هذا الربح المفترض.
                3.  احسب الصافي بعد خصم الضريبة من الإيرادات.
            `;
            break;
    }

    const prompt = `
      أنت خبير ضرائب مصري متخصص في ضرائب الشركات. قم بإعداد تقرير ضريبي مفصل لمنشأة بناءً على البيانات التالية:
      - إجمالي الإيرادات السنوية (حجم الأعمال): ${params.revenue} جنيه مصري
      ${params.expenses !== undefined ? `- إجمالي المصروفات القابلة للخصم: ${params.expenses} جنيه مصري` : ''}
      - نوع الكيان القانوني: ${params.entityType}
      - سنة المحاسبة: ${params.year}
      - النظام الضريبي المطبق: ${params.law}

      ${lawSpecificPrompt}
  
      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون إجمالي الإيرادات: ${params.revenue}.
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون الصافي النهائي بعد خصم الضريبة.
    `;
    return callGemini(prompt);
};

export const getVATTaxReport = async (params: VATTaxParams): Promise<ReportData> => {
    const totalSalesValue = params.sales.rate14 + params.sales.rate10 + params.sales.rate5 + params.sales.exempt + params.sales.debitNote - params.sales.creditNote;
    const prompt = `
      أنت خبير ضرائب مصري محترف ومتخصص في ضريبة القيمة المضافة (VAT). قم بإعداد تقرير مفصل لإقرار ضريبة القيمة المضافة بناءً على البيانات التالية:
      - الفترة الضريبية: شهر ${params.month} من سنة ${params.year}
      - الرصيد الدائن السابق: ${params.previousCredit} جنيه مصري

      بيانات المبيعات (المخرجات):
      - مبيعات خاضعة لـ 14%: ${params.sales.rate14}
      - مبيعات خاضعة لـ 10%: ${params.sales.rate10}
      - مبيعات خاضعة لـ 5%: ${params.sales.rate5}
      - مبيعات معفاة: ${params.sales.exempt}
      - إشعارات دائن (مرتجعات مبيعات): ${params.sales.creditNote}
      - إشعارات مدين (إضافات على المبيعات): ${params.sales.debitNote}

      بيانات المشتريات (المدخلات):
      - مشتريات خاضعة لـ 14%: ${params.purchases.rate14}
      - مشتريات خاضعة لـ 10%: ${params.purchases.rate10}
      - مشتريات خاضعة لـ 5%: ${params.purchases.rate5}
      - مشتريات معفاة: ${params.purchases.exempt}
      - إشعارات دائن (إضافات على المشتريات): ${params.purchases.creditNote}
      - إشعارات مدين (مرتجعات مشتريات): ${params.purchases.debitNote}

      المطلوب (اتبع الخطوات بدقة):
      1.  **حساب ضريبة المخرجات:**
          - احسب صافي المبيعات لكل شريحة (مثال: مبيعات 14% - مرتجعات + إضافات).
          - احسب ضريبة المخرجات لكل شريحة (صافي المبيعات للشريحة * نسبة الضريبة).
          - احسب "إجمالي ضريبة المخرجات".
      2.  **حساب ضريبة المدخلات القابلة للخصم:**
          - احسب صافي المشتريات لكل شريحة.
          - احسب ضريبة المدخلات لكل شريحة.
          - احسب "إجمالي ضريبة المدخلات القابلة للخصم".
      3.  **حساب صافي الضريبة:**
          - احسب "صافي ضريبة الفترة" = (إجمالي ضريبة المخرجات - إجمالي ضريبة المدخلات).
      4.  **تحديد النتيجة النهائية:**
          - احسب "النتيجة النهائية" = (صافي ضريبة الفترة - الرصيد الدائن السابق).
          - إذا كانت النتيجة موجبة، فهي "ضريبة واجبة السداد".
          - إذا كانت النتيجة سالبة، فهي "رصيد دائن مرحل للشهر التالي".

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون إجمالي قيمة المبيعات (قبل التسويات): ${totalSalesValue}.
      - خاصية 'totalTax' يجب أن تكون القيمة المطلقة لـ "ضريبة واجبة السداد" (تكون 0 إذا كان هناك رصيد دائن).
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون "النتيجة النهائية" (موجبة للضريبة المستحقة، سالبة للرصيد الدائن).
      - يجب أن يحتوي مصفوفة 'calculations' على جميع الخطوات المذكورة أعلاه بالتفصيل.
      - يجب أن يلخص 'summary' النتيجة النهائية بوضوح (هل هي ضريبة واجبة السداد أم رصيد دائن مرحل).
    `;
    return callGemini(prompt);
};


export const getRealEstateTaxReport = async (params: RealEstateTaxParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير ضرائب مصري متخصص في الضريبة العقارية على العقارات المبنية. قم بإعداد تقرير ضريبي مفصل بناءً على البيانات التالية:
      - القيمة السوقية التقديرية للعقار: ${params.marketValue} جنيه مصري
      - نوع الوحدة: ${params.propertyType}
      - هل هي المسكن الرئيسي للمكلف وأسرته؟: ${params.isPrimaryResidence === 'yes' ? 'نعم' : 'لا'}
      - سنة المحاسبة: ${params.year}
  
      المطلوب (اتبع خطوات القانون المصري بدقة):
      1.  قدّر "القيمة الإيجارية السنوية" للعقار.
      2.  اخصم مصاريف الصيانة: 30% للوحدات السكنية، و 32% للوحدات غير السكنية.
      3.  احسب "صافي القيمة الإيجارية السنوية".
      4.  طبق حد الإعفاء (24,000 جنيه للسكني الرئيسي، 1,200 لغير السكني).
      5.  الناتج بعد الإعفاء هو "وعاء الضريبة".
      6.  احسب "الضريبة السنوية المستحقة" (وعاء الضريبة * 10%).
  
      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون القيمة السوقية للعقار: ${params.marketValue}.
      - خاصية 'totalTax' يجب أن تكون "الضريبة السنوية المستحقة".
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون أيضًا "الضريبة السنوية المستحقة".
    `;
    return callGemini(prompt);
};

export const getWithholdingTaxReport = async (params: WithholdingTaxParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير ضرائب مصري متخصص في ضريبة الخصم والتحصيل. قم بإعداد تقرير مفصل بناءً على البيانات التالية:
      - قيمة التعامل: ${params.amount} جنيه مصري
      - طبيعة التعامل: ${params.transactionType}
      - سنة المحاسبة: ${params.year}
  
      المطلوب:
      1.  حدد نسبة الخصم الصحيحة.
      2.  احسب "قيمة الضريبة المخصومة".
      3.  احسب "صافي المبلغ المستحق للمستفيد".
  
      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون قيمة التعامل: ${params.amount}.
      - خاصية 'totalTax' يجب أن تكون "قيمة الضريبة المخصومة".
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون "صافي المبلغ المستحق للمستفيد".
    `;
    return callGemini(prompt);
};

export const getSocialInsuranceReport = async (params: SocialInsuranceParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير تأمينات اجتماعية مصري. قم بإعداد تقرير مفصل لاشتراكات التأمينات الاجتماعية بناءً على البيانات التالية:
      - الأجر الأساسي الشهري: ${params.basicWage} جنيه مصري
      - الأجر المتغير الشهري: ${params.variableWage} جنيه مصري
      - سنة المحاسبة: ${params.year}
  
      المطلوب (اتبع قانون التأمينات الاجتماعية المصري رقم 148 لسنة 2019):
      1.  حدد "أجر الاشتراك التأميني" وهو مجموع الأجر الأساسي والمتغير.
      2.  قارن أجر الاشتراك بالحد الأدنى (2000 جنيه في 2024) والحد الأقصى (12600 جنيه في 2024) لأجر الاشتراك، واعتمد المبلغ الصحيح.
      3.  احسب "حصة العامل" الشهرية (11% من أجر الاشتراك المعتمد).
      4.  احسب "حصة صاحب العمل" الشهرية (18.75% من أجر الاشتراك المعتمد).
      5.  احسب "إجمالي الاشتراك الشهري" (مجموع الحصتين).
      6.  اذكر تفاصيل الحصص (تأمين شيخوخة وعجز ووفاة، مكافأة، إصابة عمل، مرض، بطالة).
  
      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون الأجر الشامل الشهري (${params.basicWage + params.variableWage}).
      - خاصية 'totalTax' يجب أن تكون 0.
      - خاصية 'totalInsurance' يجب أن تكون "إجمالي الاشتراك الشهري".
      - خاصية 'netIncome' يجب أن تكون حصة العامل الشهرية.
      - في الملخص، وضح حصة العامل وصاحب العمل بوضوح.
    `;
    return callGemini(prompt);
};

export const getStampDutyReport = async (params: StampDutyParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير ضرائب مصري متخصص في ضريبة الدمغة. قم بإعداد تقرير مفصل بناءً على البيانات التالية:
      - قيمة التعامل أو العقد: ${params.amount} جنيه مصري
      - نوع المحرر أو التعامل: ${params.transactionType}
      - سنة المحاسبة: ${params.year}
  
      المطلوب:
      1.  حدد نوع ضريبة الدمغة المطبق (نسبية أم نوعية) بناءً على '${params.transactionType}'.
      2.  إذا كانت نسبية، حدد النسبة الصحيحة واضربها في قيمة التعامل. (مثال: الإعلانات 20%).
      3.  إذا كانت نوعية، حدد المبلغ المقطوع. (مثال: عقود التأسيس).
      4.  اذكر كيفية توزيع الضريبة إذا كانت على طرفين.
      5.  احسب "إجمالي ضريبة الدمغة المستحقة".
  
      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون قيمة التعامل: ${params.amount}.
      - خاصية 'totalTax' يجب أن تكون "إجمالي ضريبة الدمغة المستحقة".
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون أيضًا "إجمالي ضريبة الدمغة المستحقة".
    `;
    return callGemini(prompt);
};

export const getZakatReport = async (params: ZakatParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير في الشريعة الإسلامية متخصص في حساب الزكاة. قم بإعداد تقرير زكاة مفصل بناءً على البيانات التالية:
      - سعر جرام الذهب عيار 21 اليوم: ${params.goldPrice} جنيه مصري
      - النقد وما في حكمه (حسابات بنكية، ودائع): ${params.cash} جنيه مصري
      - القيمة السوقية للأسهم (بغرض المتاجرة): ${params.stocks} جنيه مصري
      - القيمة السوقية لعروض التجارة (بضاعة): ${params.tradeGoods} جنيه مصري
      - إجمالي الديون المستحقة على المزكي (التي تستحق السداد خلال العام): ${params.debts} جنيه مصري

      المطلوب (اتبع الخطوات بدقة):
      1.  **حساب نصاب الزكاة:** النصاب هو ما يعادل قيمة 85 جرامًا من الذهب عيار 21. احسبه (85 * ${params.goldPrice}).
      2.  **حساب وعاء الزكاة:** اجمع كل الأموال الزكوية (${params.cash} + ${params.stocks} + ${params.tradeGoods}).
      3.  **حساب صافي وعاء الزكاة:** اطرح الديون من وعاء الزكاة (${params.debts}).
      4.  **مقارنة بالنصاب:** قارن صافي وعاء الزكاة بالنصاب الذي حسبته.
      5.  **حساب الزكاة المستحقة:** إذا كان صافي وعاء الزكاة أكبر من أو يساوي النصاب، فالزكاة واجبة. احسبها بنسبة 2.5% (ربع العشر) من صافي وعاء الزكاة. إذا كان أقل، فالزكاة غير واجبة.

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون "وعاء الزكاة" قبل خصم الديون.
      - خاصية 'totalTax' يجب أن تكون "قيمة الزكاة المستحقة".
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون "صافي وعاء الزكاة" بعد خصم الديون.
      - يجب أن يلخص 'summary' النتيجة النهائية بوضوح (هل الزكاة واجبة أم لا وقيمتها).
    `;
    return callGemini(prompt);
};

export const getInvestmentReport = async (params: InvestmentParams): Promise<ReportData> => {
    const prompt = `
        أنت مستشار مالي متخصص في التخطيط الاستثماري. قم بإعداد تقرير مفصل لتوقع نمو استثمار بناءً على البيانات التالية:
        - المبلغ المبدئي للاستثمار: ${params.initialAmount} جنيه مصري
        - مبلغ المساهمة الشهرية: ${params.monthlyContribution} جنيه مصري
        - متوسط نسبة العائد السنوي المتوقع (%): ${params.interestRate}
        - مدة الاستثمار (بالسنوات): ${params.years}

        المطلوب (اتبع خطوات حساب الفائدة المركبة):
        1.  **حساب إجمالي المساهمات:** احسب المبلغ الإجمالي الذي سيقوم المستثمر بإيداعه خلال المدة (المبلغ المبدئي + (المساهمة الشهرية * 12 * عدد السنوات)).
        2.  **حساب القيمة المستقبلية:** استخدم صيغة القيمة المستقبلية للأقساط الدورية مع مبلغ مبدئي. الصيغة معقدة، قم بتبسيطها في الشرح.
        3.  **حساب إجمالي العوائد (الأرباح):** القيمة المستقبلية - إجمالي المساهمات.
        4.  قدم ملخصًا واضحًا للنتائج.

        قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
        - خاصية 'grossIncome' يجب أن تكون "إجمالي المساهمات".
        - خاصية 'totalTax' يجب أن تكون 0 (لأننا لا نحسب ضرائب الأرباح الرأسمالية هنا).
        - خاصية 'totalInsurance' يجب أن تكون 0.
        - خاصية 'netIncome' يجب أن تكون "القيمة المستقبلية الإجمالية" للاستثمار.
        - في الملخص، وضح للمستخدم كيف تنمو أمواله بفضل قوة الفائدة المركبة.
    `;
    return callGemini(prompt);
};


export const getEndOfServiceReport = async (params: EndOfServiceParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير موارد بشرية متخصص في قانون العمل المصري. قم بإعداد تقرير مفصل لمكافأة نهاية الخدمة بناءً على البيانات التالية:
      - آخر راتب شهري شامل: ${params.lastSalary} جنيه مصري
      - عدد سنوات الخدمة: ${params.yearsOfService} سنة

      المطلوب (اتبع المادة 126 من قانون العمل المصري رقم 12 لسنة 2003 بدقة):
      1.  **تحليل سنوات الخدمة:** قسّم سنوات الخدمة إلى فترتين: السنوات الخمس الأولى، وما زاد عن ذلك.
      2.  **حساب مكافأة الفترة الأولى:** اضرب عدد السنوات في الفترة الأولى (بحد أقصى 5 سنوات) في أجر نصف شهر (آخر راتب / 2).
      3.  **حساب مكافأة الفترة الثانية:** اضرب عدد السنوات الزائدة عن 5 في أجر شهر كامل (آخر راتب).
      4.  **حساب إجمالي المكافأة:** اجمع مكافأة الفترتين.

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون آخر راتب شهري: ${params.lastSalary}.
      - خاصية 'totalTax' يجب أن تكون 0.
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون "إجمالي مكافأة نهاية الخدمة".
      - يجب أن يلخص 'summary' كيفية حساب المكافأة بوضوح.
    `;
    return callGemini(prompt);
};

export const getFeasibilityStudyReport = async (params: FeasibilityStudyParams): Promise<ReportData> => {
    const prompt = `
      أنت مستشار أعمال متخصص في دراسات الجدوى للمشاريع الصغيرة. قم بإعداد تقرير تحليل نقطة التعادل بناءً على البيانات التالية:
      - إجمالي التكاليف الثابتة الشهرية: ${params.fixedCosts} جنيه مصري
      - التكلفة المتغيرة للوحدة الواحدة: ${params.variableCostPerUnit} جنيه مصري
      - سعر بيع الوحدة الواحدة: ${params.sellingPricePerUnit} جنيه مصري

      المطلوب (اتبع خطوات تحليل التعادل بدقة):
      1.  **حساب هامش المساهمة للوحدة:** سعر بيع الوحدة - التكلفة المتغيرة للوحدة.
      2.  **حساب نقطة التعادل بالوحدات:** إجمالي التكاليف الثابتة / هامش المساهمة للوحدة.
      3.  **حساب نقطة التعادل بالقيمة المالية:** نقطة التعادل بالوحدات * سعر بيع الوحدة.
      4.  قدم ملخصًا يشرح للمستخدم معنى نقطة التعادل وما يجب عليه تحقيقه لتجاوزها والبدء في تحقيق الأرباح.

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون "نقطة التعادل بالقيمة المالية".
      - خاصية 'totalTax' يجب أن تكون 0.
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون "نقطة التعادل بالوحدات".
      - في الملخص، اشرح النتائج بوضوح.
    `;
    return callGemini(prompt);
};

export const getElectricityReport = async (params: ElectricityParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير في تعريفة الكهرباء بجمهورية مصر العربية. قم بإعداد تقرير مفصل لتكلفة فاتورة الكهرباء بناءً على البيانات التالية:
      - إجمالي الاستهلاك الشهري: ${params.consumptionKwh} كيلوواط/ساعة
      - نوع العداد: ${params.meterType}

      المطلوب (اتبع نظام الشرائح التصاعدية المعتمد في مصر بدقة):
      1.  **حدد جدول الشرائح:** استخدم جدول الشرائح الخاص بالاستخدام ${params.meterType === 'residential' ? 'المنزلي' : 'التجاري'}.
      2.  **طبق الشرائح:** وزّع إجمالي الاستهلاك على الشرائح المختلفة من الأدنى إلى الأعلى.
      3.  **احسب تكلفة كل شريحة:** اضرب كمية الاستهلاك في كل شريحة في سعر الكيلوواط/ساعة الخاص بها.
      4.  **احسب إجمالي التكلفة:** اجمع تكلفة جميع الشرائح.
      5.  أضف أي رسوم خدمة أو دمغات ثابتة إن وجدت.
      6.  احسب "القيمة الإجمالية للفاتورة".

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون إجمالي الاستهلاك بالكيلوواط/ساعة: ${params.consumptionKwh}.
      - خاصية 'totalTax' يجب أن تكون "القيمة الإجمالية للفاتورة".
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون أيضًا "القيمة الإجمالية للفاتورة".
      - في الملخص، اشرح كيف تم حساب الفاتورة بناءً على نظام الشرائح.
    `;
    return callGemini(prompt);
};


export const getInheritanceReport = async (params: InheritanceParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير في علم المواريث متخصص في قانون المواريث المصري المستمد من الشريعة الإسلامية. قم بإعداد تقرير مفصل لتوزيع تركة بناءً على البيانات التالية:
      - قيمة التركة الإجمالية: ${params.estateValue} جنيه مصري
      - الورثة:
        - الزوج/الزوجة: ${params.hasSpouse}
        - عدد الأبناء (ذكور): ${params.sons}
        - عدد البنات (إناث): ${params.daughters}
        - الأب على قيد الحياة: ${params.father ? 'نعم' : 'لا'}
        - الأم على قيد الحياة: ${params.mother ? 'نعم' : 'لا'}
        - الجد لأب على قيد الحياة: ${params.paternalGrandfather ? 'نعم' : 'لا'}
        - الجدة لأم على قيد الحياة: ${params.maternalGrandmother ? 'نعم' : 'لا'}
        - الجدة لأب على قيد الحياة: ${params.paternalGrandmother ? 'نعم' : 'لا'}
        - عدد الإخوة الأشقاء: ${params.fullBrothers}
        - عدد الأخوات الشقيقات: ${params.fullSisters}
        - عدد الإخوة لأب: ${params.paternalBrothers}
        - عدد الأخوات لأب: ${params.paternalSisters}
        - عدد الإخوة والأخوات لأم: ${params.maternalSiblings}

      المطلوب (اتبع قواعد الميراث الإسلامي بدقة متناهية):
      1.  **تحديد الورثة المستحقين:** بناءً على الورثة الموجودين، حدد من يرث ومن يتم حجبه. (مثال: الأب يحجب الجد، والابن يحجب الإخوة).
      2.  **تحديد أصحاب الفروض:** حدد أنصبة أصحاب الفروض أولاً (مثل الزوج/الزوجة، الأب، الأم، الجدات).
          - الزوجة: الثمن مع وجود فرع وارث، والربع عند عدم وجوده.
          - الزوج: الربع مع وجود فرع وارث، والنصف عند عدم وجوده.
          - الأب: السدس مع وجود فرع وارث ذكر. السدس + عصبة مع فرع وارث أنثى. عصبة عند عدم وجود فرع وارث.
          - الأم: السدس مع وجود فرع وارث أو عدد من الإخوة. الثلث عند عدم وجودهما.
          - الجدات: السدس (لواحدة أو يشتتركن فيه).
          - الإخوة لأم: السدس للواحد، والثلث للاثنين فأكثر.
      3.  **توزيع الباقي تعصيبًا:** بعد إعطاء أصحاب الفروض فروضهم، وزع الباقي على العصبات (الأبناء، الأب، الإخوة...) للذكر مثل حظ الأنثيين.
      4.  **حساب قيمة نصيب كل وارث:** اضرب نسبة كل وارث في قيمة التركة الإجمالية.
      5.  **عرض التقرير:** قدم تقريرًا مفصلاً يوضح نصيب كل وارث، سبب استحقاقه، وقيمة نصيبه المالية.

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون قيمة التركة الإجمالية: ${params.estateValue}.
      - خاصية 'totalTax' و 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون أيضًا قيمة التركة الإجمالية.
      - في 'calculations'، يجب أن تكون كل خطوة هي نصيب وارث معين (مثال: 'نصيب الابن الأول'، 'نصيب الزوجة').
      - في الملخص، اشرح بإيجاز من هم الورثة الرئيسيون وكيف تم التوزيع.
    `;
    return callGemini(prompt);
};

export const getCustomsReport = async (params: CustomsParams): Promise<ReportData> => {
    const prompt = `
      أنت خبير جمارك مصري متخصص في تقدير الرسوم على الواردات. قم بإعداد تقرير تقديري للرسوم الجمركية بناءً على البيانات التالية:
      - قيمة الشحنة (CIF): ${params.shipmentValue} جنيه مصري
      - وصف السلعة: "${params.description}"
      - بلد المنشأ: ${params.countryOfOrigin}

      المطلوب (اتبع الخطوات التقديرية بدقة):
      1.  **تحديد فئة التعريفة الجمركية:** بناءً على وصف السلعة، قدّر فئة التعريفة الجمركية الأكثر احتمالاً بالنسبة المئوية. (مثال: إلكترونيات، ملابس، سيارات، مواد خام). كن واضحًا أن هذا تقدير.
      2.  **حساب الضريبة الجمركية:** اضرب قيمة الشحنة في النسبة المئوية للتعريفة الجمركية.
      3.  **حساب وعاء ضريبة القيمة المضافة:** اجمع (قيمة الشحنة + الضريبة الجمركية + أي رسوم أخرى مثل رسم التنمية). افترض رسم تنمية 3% كقيمة تقديرية.
      4.  **حساب ضريبة القيمة المضافة:** اضرب وعاء ضريبة القيمة المضافة في 14%.
      5.  **حساب إجمالي الرسوم والضرائب:** اجمع (الضريبة الجمركية + ضريبة القيمة المضافة + رسم التنمية).
      6.  **حساب التكلفة الإجمالية للشحنة:** اجمع (قيمة الشحنة + إجمالي الرسوم والضرائب).

      قم بإرجاع النتائج بصيغة JSON صارمة تتبع المخطط المحدد.
      - خاصية 'grossIncome' يجب أن تكون قيمة الشحنة: ${params.shipmentValue}.
      - خاصية 'totalTax' يجب أن تكون "إجمالي الرسوم والضرائب".
      - خاصية 'totalInsurance' يجب أن تكون 0.
      - خاصية 'netIncome' يجب أن تكون "التكلفة الإجمالية للشحنة".
      - في الملخص، اشرح أن هذه الحسابات تقديرية وأن القيمة النهائية تحددها السلطات الجمركية عند المعاينة.
    `;
    return callGemini(prompt);
};



export const startTaxChat = (): Chat => {
    const systemInstruction = `
        أنت خبير ضرائب وتأمينات مصري محترف ومساعد. 
        مهمتك هي الإجابة على استفسارات المستخدمين حول قوانين الضرائب والتأمينات في جمهورية مصر العربية. 
        - قدم إجابات واضحة وموجزة ومبنية على القوانين السارية.
        - لا تقدم نصائح مالية أو قانونية شخصية ملزمة، بل قدم معلومات عامة لأغراض استرشادية.
        - إذا لم تكن متأكدًا من إجابة، اذكر ذلك واقترح على المستخدم استشارة محاسب قانوني.
        - حافظ على لهجة احترافية ومفيدة.
        - ابدأ المحادثة دائماً برسالة ترحيبية قصيرة.
    `;
    const chat: Chat = ai.chats.create({
        model: 'gemini-2.5-flash',
        config: {
            systemInstruction: systemInstruction,
            temperature: 0.5,
        },
    });
    return chat;
};